name: Docker Image Publishing CI

on:
  push:
    branches: [ master ]

env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE }}
  APPLICATION_CREDENTIALS: ${{secrets.GCE_SA_KEY}}

jobs:
  dockerhub:
    runs-on: ubuntu-latest
    name: Build and deploy docker image to DockerHb
    steps:
    - uses: actions/checkout@v2
    - uses: styfle/cancel-workflow-action@0.6.0
      with: 
        access_token: ${{ github.token }}
    - name: Setup git-crypt
      run: sudo apt-get install -y git-crypt
    - name: Check git-crypt version
      run: git-crypt --version
    - name: Setup base64 util
      run: sudo apt-get install -y cl-base64
    - name: Save base64 key from GitHub secrets to file
      run: sudo echo "${{secrets.GIT_CRYPT_KEY_B64}}" > key_base64.txt
    - name: Create git-crypt key file from base64 encoded key
      run: sudo base64 -d key_base64.txt > key
    - name: Unlock secrets
      run: git-crypt unlock key
    - name: Docker Login
      uses: docker/login-action@v1.4.1
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        # Username used to log against the Docker registry
        username: danilandreev
        # Password or personal access token used to log against the Docker registry
        password: ${{secrets.DOCKER_HUB_DA_TOKEN}}
        # Log out from the Docker registry at the end of a job
        logout: true
    - name: Echo docker version
      run: docker --version
    - name: Echo docker-compose version
      run: docker-compose --version
    - name: Build the Docker image
      run: docker-compose build
  
    - name: Tag image "pathfinder-core" as "danilandreev/pathfinder-core"
      run: docker tag pathfinder-core danilandreev/pathfinder-core
    - name: List of images in local docker registry
      run: docker images
    - name: Push image to docker
      run: docker push danilandreev/pathfinder-core
      
  github: 
    runs-on: ubuntu-latest
    name: Publish image to github packages registry
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: styfle/cancel-workflow-action@0.6.0
        with: 
          access_token: ${{ github.token }}
      - name: Setup git-crypt
        run: sudo apt-get install -y git-crypt
      - name: Check git-crypt version
        run: git-crypt --version
      - name: Setup base64 util
        run: sudo apt-get install -y cl-base64
      - name: Save base64 key from GitHub secrets to file
        run: sudo echo "${{secrets.GIT_CRYPT_KEY_B64}}" > key_base64.txt
      - name: Create git-crypt key file from base64 encoded key
        run: sudo base64 -d key_base64.txt > key
      - name: Unlock secrets
        run: git-crypt unlock key
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: atlasrender/atlas-core/atlas-core-dev
          tag_with_ref: true

  deploy:
    runs-on: ubuntu-latest
    name: Deploy image to kubernetes cluster
    needs: [dockerhub]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - name: ssh pipelines
        uses: cross-the-world/ssh-pipeline@master
        with:
          host: ${{secrets.CORE_KUBERNETES_IP}}
          user: "atlas"
          key: ${{secrets.GCLOUD_TEST_DATA_STORAGE_SSH_ID_RSA_PRIVATE}}
          connect_timeout: 10s
          script: |
            cd /home/atlas-core
            sudo git pull
            sudo kubectl apply -f kubernetes/