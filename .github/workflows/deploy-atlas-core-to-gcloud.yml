name: Deploy Atlas Core to GCloud

on:
  push:
    branches: [ master ]

env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CORE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_CORE_CLUSTER_ZONE }}
  DEPLOYMENT_NAME: ${{ secrets.GKE_CORE_APP }}
  IMAGE: atlas-core-dev-sha256-1

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and publish image to GCloud container registry
    steps:
      - uses: actions/checkout@v2
      - uses: styfle/cancel-workflow-action@0.6.0
        with: 
          access_token: ${{ github.token }}
      - name: Setup git-crypt
        run: sudo apt-get install -y git-crypt
      - name: Check git-crypt version
        run: git-crypt --version
      - name: Setup base64 util
        run: sudo apt-get install -y cl-base64
      - name: Save base64 key from GitHub secrets to file
        run: sudo echo "${{secrets.GIT_CRYPT_KEY_B64}}" > key_base64.txt
      - name: Create git-crypt key file from base64 encoded key
        run: sudo base64 -d key_base64.txt > key
      - name: Unlock secrets
        run: git-crypt unlock key
            
      - name: GCloud Container Registry Docker Login
        uses: elgohr/gcloud-login-action@0.2
        id: gcloud
        with:
          # Base64 encoded service account key exported as JSON
          account_key: ${{secrets.GCE_SA_KEY_BASE64}}

      - name: Push to GCloud Container Registry
        uses: docker/build-push-action@v1
        with:
          username: ${{ steps.gcloud.outputs.username }}
          password: ${{ steps.gcloud.outputs.password }}
          registry: us.gcr.io
          repository: ${{secrets.GCLOUD_PROJECT_ID}}/atlas-core/atlas-core-dev
          tag_with_ref: true
  
  deploy: 
    runs-on: ubuntu-latest
    name: Deploy image to GCloud Kubernetes engine
    needs: [build]
    steps:
      - name: Setup GCloud environment
        uses: google-github-actions/setup-gcloud@0.1.2
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCE_SA_KEY }}
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}

      - name: Get the GKE credentials so we can deploy to the cluster
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE" --project "$PROJECT_ID"
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      - name: Deploy
        run: |-
          kubectl set image "deployment/$DEPLOYMENT_NAME" "$IMAGE"="us.gcr.io/$PROJECT_ID/atlas-core/atlas-core-dev:latest"
          
          
#       - name: Deploy
#         run: |-
#           ./kustomize edit set image $IMAGE="us.gcr.io/$PROJECT_ID/atlas-core/atlas-core-dev:latest"
#           ./kustomize build . | kubectl apply -f -
#           kubectl rollout status deployment/$DEPLOYMENT_NAME
#           kubectl get services -o wide



#       - name: Set up GCloud zone
#         run: gcloud config set compute/zone ${{ secrets.GKE_CORE_CLUSTER_ZONE }}
#       - name: Set up GCloud env
#         run: gcloud config set container/use_client_certificate True
#       - name: Setup kubectl credentials
#         run: gcloud container clusters get-credentials ${{ secrets.GKE_CORE_CLUSTER }}
#       - name: Install kubectl
#         uses: gane5hvarma/kubectl-actions@v0.0.1
#       - name: Setup kubectl credentials
#         run: gcloud container clusters get-credentials ${{ secrets.GKE_CORE_CLUSTER }}
#       - name: Set new image for GKE
#         run: kubectl set image deployment/${{ secrets.GKE_CORE_APP }} atlas-core-dev-sha256-1=us.gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/atlas-core/atlas-core-dev:latest
        
        
